[filename, folder] = uigetfile({'*.csv', 'CSV file (*.csv)'}, 'Choose a Trial 1 file');maxTrials = 3;plottingYes = 0; if filename == 0  disp('No file selected.')  returnendfn_length = length(filename);filename_stub = filename(1:fn_length-7);rowCount = NaN(1,maxTrials);all_data = NaN(5000, maxTrials+1); %make a big empty matrix to store the datamaxRows = 1;metadata = NaN(6, maxTrials+1);%% Metadata matrix has 6 rows  and 1 column for time + 1 per trial:% 1) # of datapoints, % 2) time at last datapoint,% 3) minimum value per column,% 4) row of min value,% 5) max value per column,% 6) row of max value.for nTrial = 1:maxTrials  fn = strcat(folder, filename_stub, '-0', num2str(nTrial),'.csv');  trial_data = importdata(fn, ",", 1);  [numRows, numCols] = size(trial_data.data);  if numCols > 2  %This script assumes only one trial per data file, so error out if there's more than that.    sprintf(fn)    error('Data file contains more than one trial.')  end  if numRows > maxRows    maxRows = numRows;    all_data(1:numRows, 1) = trial_data.data(:,1);  end    all_data(1:numRows, nTrial+1) = trial_data.data(:,2);    metadata(1, nTrial+1) = numRows;    metadata(2, nTrial+1) = trial_data.data(numRows,1);end[min_vals, min_pos] = min(all_data);[max_vals, max_pos] = max(all_data);metadata(3:6, :) = [min_vals; min_pos; max_vals; max_pos];if plottingYes == 1  %% pH plot  fig1 = figure;  plot(all_data(:,1), all_data(:,2:maxTrials+1))  title(strrep(filename_stub, '_','/'))  legend ('trial 1', 'trial 2', 'trial 3')  xlabel('time (s)'); ylabel('pH')  set(gca, 'YLim', [3 10], 'XLim', [0 100])  hold on  plot([0 100], [7 7],'k-')  hold off  %% Zero order plot  H_conc = NaN(5000, maxTrials+1); %make a big empty matrix to store the data  H_conc(:, 1) = all_data(:, 1);  H_conc(:, 2:maxTrials+1) = [10.^-all_data(:,2:maxTrials+1)];  fig2=figure;  plot(H_conc(:,1), H_conc(:, 2:maxTrials+1))  title('Zero order')  legend ('trial 1', 'trial 2', 'trial 3')  xlabel('time (s)'); ylabel('[H^+] (M)')  set(gca,'XLim', [0 100], 'YLim', [0 1e-4])  %% First order plot  lnH = NaN(5000, maxTrials+1); %make a big empty matrix to store the data  lnH(:, 1) = all_data(:, 1);  lnH(:, 2:maxTrials+1) = [log(H_conc(:, 2:maxTrials+1))];  fig3=figure;  plot(lnH(:,1), lnH(:, 2:maxTrials+1))  title('First order')  legend ('trial 1', 'trial 2', 'trial 3')  xlabel('time (s)'); ylabel('ln [H^+]')  set(gca,'XLim', [0 100], 'YLim', [-20 0])  %% Second order plot  inv_H = NaN(5000, maxTrials+1); %make a big empty matrix to store the data  inv_H(:, 1) = all_data(:, 1);  inv_H(:, 2:maxTrials+1) = [1./H_conc(:, 2:maxTrials+1)];  fig4=figure;  plot(inv_H(:,1), inv_H(:, 2:maxTrials+1))  title('Second order')  legend ('trial 1', 'trial 2', 'trial 3')  xlabel('time (s)'); ylabel('1/[H^+]')  set(gca,'XLim', [0 100], 'YLim', [0 1.5e6])  %% combined figure  fig5 = figure;  subplot(3,1,1)  p1 = plot(H_conc(:,1), H_conc(:, 2:maxTrials+1));  title('Zero order')  legend ('trial 1', 'trial 2', 'trial 3')  ylabel('[H^+] (M)')  set(gca,'XLim', [0 100], 'YLim', [0 1e-4])  subplot(3,1,2)  p2 = plot(lnH(:,1),lnH(:, 2:maxTrials+1));  title('First order')  ylabel('ln [H^+]')  set(gca,'XLim', [0 100], 'YLim', [-20 0])  subplot(3,1,3)  p3=plot(inv_H(:,1), inv_H(:, 2:maxTrials+1));  title('Second order')  xlabel('time (s)'); ylabel('1/[H^+]')  set(gca,'XLim', [0 100], 'YLim', [0 1.5e6])end%% Save outputoutput_folder = uigetdir;if plottingYes == 1  % Save Figures  saveas(fig1, [output_folder filesep filename_stub '-pH'],'jpg');  saveas(fig2, [output_folder filesep filename_stub '-0-order'],'jpg');  saveas(fig3, [output_folder filesep filename_stub '-1-order'],'jpg');  saveas(fig4, [output_folder filesep filename_stub '-2-order'],'jpg');  saveas(fig5, [output_folder filesep filename_stub '-012-order'],'jpg');end% Save Raw Datadelim = ',';headers = cell(1,maxTrials+1);headers{1} = 'Time (s)';for numTrial = 1:maxTrials  headers{numTrial+1} = sprintf('Trial %d pH', numTrial);endall_data(max_pos(1)+1:end,:) = []; %Trim off unnecessary NaNsoutPath = [output_folder filesep filename_stub '-data.csv'];output = fopen(outPath, 'wt');fprintf(output, ['%s' repmat([delim '%s'], 1, maxTrials) '\n'], headers{:});fprintf(output, ['%.2f' repmat([delim '%g'], 1, maxTrials) ...    '\n'], all_data');fclose all;