[filename, folder] = uigetfile({'*.csv', 'CSV file (*.csv)'}, 'Choose a Trial 1 file');maxTrials = 3; % maximum possible is currently 9 if filename == 0  disp('No file selected.')  returnendfn_length = length(filename);filename_stub = filename(1:fn_length-7);all_data = NaN(5000, maxTrials+1); %make a big empty matrix to store the datamaxRows = 1;metadata = NaN(6, maxTrials+1);%% Metadata matrix has 6 rows  and 1 column for time + 1 per trial:% 1) # of datapoints, % 2) time at last datapoint,% 3) minimum value per column,% 4) row of min value,% 5) max value per column,% 6) row of max value.for nTrial = 1:maxTrials  fn = strcat(folder, filename_stub, '-0', num2str(nTrial),'.csv');  trial_data = importdata(fn, ",", 1);  [numRows, numCols] = size(trial_data.data);  if numCols > 2  %This script assumes only one trial per data file, so error out if there's more than that.    disp(fn)    error('Data file contains more than one trial.')  end  if numRows > maxRows    maxRows = numRows;    all_data(1:numRows, 1) = trial_data.data(:,1);  end    all_data(1:numRows, nTrial+1) = trial_data.data(:,2);    metadata(1, nTrial+1) = numRows;    metadata(2, nTrial+1) = trial_data.data(numRows,1);end[min_vals, min_pos] = min(all_data);[max_vals, max_pos] = max(all_data);metadata(3:6, :) = [min_vals; min_pos; max_vals; max_pos];all_data(max_pos(1)+1:end,:) = []; %Trim off unnecessary NaNs%% New trimmer stuffdifferences = abs(all_data(1:end-1, :)-all_data(2:end, :));[maxDiff, maxDiffPos] = max(differences);trimmedData = NaN(maxRows, maxTrials+1);trimmedData(:,1) = all_data(:,1);numRowsCopied = maxRows - maxDiffPos;for iTrial = 1:maxTrials  trimmedData(1:numRowsCopied(iTrial+1), iTrial+1) = all_data(maxDiffPos(iTrial+1)+1:end, iTrial+1);endtrimRow = max(numRowsCopied(2:end))+1;trimmedData(trimRow:end,:) = []; %Trim off unnecessary NaNs